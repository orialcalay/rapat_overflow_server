{"version":3,"sources":["logo.svg","Menu/CommonMenu.js","Common/RapatButton.js","Tags/TagCard.js","Tags/Tags.js","Register/Register.js","Login/Login.js","Users/UserCard.js","Questions/QuestionReview.js","Questions/Filters.js","Questions/QuestionList.js","Common/RapatModal.js","Questions/AddTags.js","Questions/AddQuestion.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","onOpenChange","value","console","log","handleClick","info","key","CommonMenu","history","useHistory","children","disabled","title","className","onClick","push","selectedKeys","mode","openAnimation","useStyles","makeStyles","root","background","props","border","borderRadius","boxShadow","color","height","width","padding","marginRight","marginTop","RapatButton","name","onClicked","classes","Button","TagCard","description","questionsCount","url","axios","get","then","response","pathname","state","tagQuestions","data","Tags","useState","tags","setTags","useEffect","TagCards","map","tag","i","tag_name","tag_description","tag_questions_number","Register","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","hintText","floatingLabelText","onChange","event","newValue","type","label","primary","method","Login","userName","setUserName","modal","setModal","toggle","error","variant","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","theme","maxWidth","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","QuestionReview","viewCount","answersCount","score","ownerName","tagSpans","Filters","sortByFilter","onFilterClicked","target","innerText","style","display","QuestionList","questions","setQuestions","filter","setFilter","location","useLocation","undefined","QuestionsReview","sort","a","b","view_count","question","answers_count","owner_name","RapatModal","text","modalOpen","handleClose","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","autoFocus","styled","onDelete","lbc","lightBlue","inputUseStyles","AddQuestion","inputClasses","setTitle","body","setModalOpen","onInput","e","placeholder","icon","faRedoAlt","faUndoAlt","faQuoteRight","faLink","faListOl","Input","multiline","tagsArray","split","App","direction","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,kC,6YCMzC,SAASC,EAAaC,GACpBC,QAAQC,IAAI,eAAgBF,GAG9B,SAASG,EAAYC,GACnBH,QAAQC,IAAR,kBAAuBE,EAAKC,MAC5BJ,QAAQC,IAAIE,GAID,SAASE,IAElB,IAAIC,EAAUC,cAERC,EAAW,CACf,kBAAC,IAAD,CAAUJ,IAAI,IAAIK,UAAQ,GAA1B,kBACA,kBAAC,IAAD,CAASC,MAAO,0BAAMC,UAAU,yBAAhB,oDAAyDP,IAAI,KAC3E,kBAAC,IAAD,CAAUA,IAAI,MAAMQ,QAAS,kBAAMN,EAAQO,KAAK,OAAhD,kCACA,kBAAC,IAAD,CAAUT,IAAI,OAAd,8CACA,kBAAC,IAAD,CAAUA,IAAI,OAAd,oFAEF,kBAAC,IAAD,CAAUA,IAAI,IAAIQ,QAAS,kBAAMN,EAAQO,KAAK,YAA9C,kCACA,kBAAC,IAAD,CAAUT,IAAI,IAAIQ,QAAS,kBAAMN,EAAQO,KAAK,eAA9C,kCACA,kBAAC,IAAD,CAAUT,IAAI,IAAIQ,QAAS,kBAAMN,EAAQO,KAAK,gBAA9C,mCAIF,OACE,6BACE,kBAAC,IAAD,CACED,QAASV,EACTJ,aAAcA,EACdgB,aAAc,CAAC,KACfC,KAAK,aACLC,cAAc,YAEbR,I,wECtCPS,EAAYC,YAAW,CACzBC,KAAM,CACJC,WAAY,SAAAC,GAAK,OAAIA,EAAMD,YAC3BE,OAAQ,EACRC,aAAc,EACdC,UAAW,wCACXC,MAAO,QACPC,OAAQ,GACRC,MAAO,IACPC,QAAS,SACTC,YAAa,SAAAR,GAAK,OAAIA,EAAMQ,aAC5BC,UAAW,SAAAT,GAAK,OAAIA,EAAMS,cAKjB,SAASC,EAAT,GAAkD,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,UAAcZ,EAAO,oCAEtDa,EAAUjB,EAAUI,GAE1B,OACI,6BACI,kBAACc,EAAA,EAAD,CAAQvB,QAASqB,EAAWtB,UAAWuB,EAAQf,MAAOa,ICnBnD,SAASI,EAAT,GAAsD,IAApCJ,EAAmC,EAAnCA,KAAMK,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,eAE5ChC,EAAUC,cAad,OACI,yBAAKI,UAAU,QACX,kBAACoB,EAAD,CAAaX,WAAW,UAAUa,UAb1C,WACI,IAAIM,EAAG,6CAAyCP,GAChDQ,IAAMC,IAAIF,GACDG,MAAK,SAAUC,GACZrC,EAAQO,KAAK,CACT+B,SAAU,aACVC,MAAO,CAAEC,aAAeH,EAASI,YAOSf,KAAMA,IAC5D,uBAAGrB,UAAU,mBAAmB0B,GAChC,yBAAK1B,UAAU,iBACX,0BAAMA,UAAU,oBAAoB,4DAAiB2B,GACrD,0BAAM3B,UAAU,yBAAhB,0G,OCvBD,SAASqC,EAAT,GAAkB,qBAELC,mBAAS,IAFL,mBAErBC,EAFqB,KAEfC,EAFe,KAK5BC,qBAAU,WACNZ,IAAMC,IAAI,iCACDC,MAAK,SAAUC,GACZQ,EAAQR,EAASI,WAE9B,IAGH,IAAMM,EAAWH,EAAKI,KAAI,SAACC,EAAKC,GAAN,OACtB,kBAAC,EAAD,CAASxB,KAAMuB,EAAIE,SAAUpB,YAAakB,EAAIG,gBAC1CpB,eAAgBiB,EAAII,qBAAsBvD,IAAKoD,OAGvD,OACI,yBAAK7C,UAAU,aACV0C,G,8DClBE,SAASO,IAAY,IAAD,EAECX,mBAAS,IAFV,mBAE1BY,EAF0B,KAEfC,EAFe,OAGDb,mBAAS,IAHR,mBAG1Bc,EAH0B,KAGhBC,EAHgB,OAIPf,mBAAS,IAJF,mBAI1BgB,EAJ0B,KAInBC,EAJmB,OAKDjB,mBAAS,IALR,mBAK1BkB,EAL0B,KAKhBC,EALgB,WAyBDnB,oBAAS,GAzBR,6BA4BjC,OACI,yBAAKtC,UAAU,YACb,kBAAC,IAAD,KACE,6BACC,kBAAC,IAAD,CACE0D,SAAS,iEACTC,kBAAkB,wCAClBC,SAAY,SAACC,EAAMC,GAAP,OAAoBX,EAAaW,MAE/C,6BACA,kBAAC,IAAD,CACEJ,SAAS,uEACTC,kBAAkB,8CAClBC,SAAY,SAACC,EAAMC,GAAP,OAAoBT,EAAYS,MAE9C,6BACA,kBAAC,IAAD,CACEJ,SAAS,gEACTK,KAAK,QACLJ,kBAAkB,uCAClBC,SAAY,SAACC,EAAMC,GAAP,OAAoBP,EAASO,MAE3C,6BACA,kBAAC,IAAD,CACEC,KAAO,WACPL,SAAS,0DACTC,kBAAkB,iCAClBC,SAAY,SAACC,EAAMC,GAAP,OAAoBL,EAAYK,MAE9C,6BACA,kBAAC,IAAD,CAAc9D,UAAU,gBAAgBgE,MAAM,iCAAQC,SAAS,EAAMhE,QAnD9E,WAEE4B,IAAM,CACFqC,OAAQ,OACRtC,IAAK,mCACLQ,KAAM,CACJc,UAAWA,EACXE,SAAUA,EACVE,MAAOA,EACPE,SAAUA,KAGfzB,MAAK,SAAUC,GACTA,EAASI,c,+DClBL,SAAS+B,IAAS,IAAD,EAEE7B,mBAAS,IAFX,mBAEvB8B,EAFuB,KAEbC,EAFa,OAGE/B,mBAAS,IAHX,mBAGvBkB,EAHuB,KAGbC,EAHa,OAIJnB,oBAAS,GAJL,mBAIvBgC,EAJuB,KAIhBC,EAJgB,KAsB9B,IAAMC,EAAS,kBAAMD,GAAUD,IAE/B,OACE,yBAAKtE,UAAU,SACb,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CACEgE,MAAM,QACNS,OAAK,EACLC,QAAQ,WACRhB,SAAS,uEACTC,kBAAkB,8CAClBC,SAAY,SAACC,EAAMC,GAAP,OAAoBO,EAAYP,MAE9C,6BACE,kBAAC,IAAD,CACEC,KAAK,WACLL,SAAS,0DACTC,kBAAkB,iCAClBC,SAAY,SAACC,EAAMC,GAAP,OAAoBL,EAAYK,MAE9C,6BACA,kBAAC,IAAD,CAAc9D,UAAU,aAAagE,MAAM,iCAAQC,SAAS,EAAMhE,QAtC5E,WACI4B,IAAM,CACFqC,OAAQ,OACRtC,IAAK,iCACLQ,KAAM,CACFf,KAAM+C,EACNZ,SAAUA,KAGjBzB,MAAK,SAAUC,GACQ,QAAjBA,EAASI,MACVoC,YA8BJ,yBAAKxE,UAAU,SACb,kBAAC2E,EAAA,EAAD,CAAOC,OAAQN,EAAOE,OAAQA,GAC1B,kBAACK,EAAA,EAAD,CAAaL,OAAQA,GAArB,+CACA,kBAACM,EAAA,EAAD,sGAGA,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAQjE,MAAM,UAAUb,QAASuE,GAAjC,gBAA+D,IAC/D,kBAAC,IAAD,CAAQ1D,MAAM,YAAYb,QAASuE,GAAnC,c,yHC7CEjE,aAAW,SAAAyE,GAAK,MAAK,CACrCxE,KAAM,CACJyE,SAAU,KAEZC,MAAO,CACLnE,OAAQ,EACRoE,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYP,EAAMQ,YAAYC,OAAO,YAAa,CAChDC,SAAUV,EAAMQ,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACNC,gBAAiBC,IAAI,U,cCnCV,SAASC,EAAT,GAA+F,IAAtEjG,EAAqE,EAArEA,MAAO2B,EAA8D,EAA9DA,YAAaa,EAAiD,EAAjDA,KAAM0D,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,UAGxFC,EAAW9D,EAAKI,KAAI,SAACC,EAAKC,GAAN,OACtB,0BAAM7C,UAAU,OAAO4C,MAG3B,OACI,yBAAK5C,UAAU,oBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,QACX,0BAAMA,UAAU,aAAamG,GAC7B,uEAEJ,yBAAKnG,UAAU,YACX,0BAAMA,UAAU,gBAAgBkG,GAChC,uEAEJ,yBAAKlG,UAAU,SACX,8BAAO,4DAAiBiG,MAIpC,yBAAKjG,UAAU,WACX,0BAAMA,UAAU,kBAAkBD,GAClC,0BAAMC,UAAU,kBAAkB0B,EAAcA,EAAcA,GAC9D,yBAAK1B,UAAU,iBACVqG,GAEL,yBAAKrG,UAAU,eACX,0BAAMA,UAAU,oBAAhB,gGACA,0BAAMA,UAAU,YAAY,oCAAaoG,MChC9C,SAASE,EAAT,GAAiC,IAAfC,EAAc,EAAdA,aAE7B,SAASC,EAAgB3C,GACpB0C,EAAa1C,EAAM4C,OAAOC,WAG/B,OACI,yBAAKC,MAAO,CAAEC,QAAS,SACnB,kBAACxF,EAAD,CAAaX,WAAW,UAAUa,UAAWkF,EAAiBnF,KAAK,kEACnE,kBAACD,EAAD,CAAaX,WAAW,UAAUS,YAAY,MAAMI,UAAWkF,EAAiBnF,KAAK,oFACrF,kBAACD,EAAD,CAAaX,WAAW,UAAUS,YAAY,MAAMI,UAAWkF,EAAiBnF,KAAK,6D,OCDlF,SAASwF,IAAe,IAAD,EAEAvE,mBAAS,IAFT,mBAE3BwE,EAF2B,KAEhBC,EAFgB,OAGNzE,oBAAS,GAHH,mBAG3B0E,EAH2B,KAGnBC,EAHmB,KAM9BC,EAAWC,cAgBf1E,qBAAU,gBACgB2E,IAAnBF,EAAShF,MACR6E,EAAaG,EAAShF,MAAMC,cAG5BN,IAAMC,IAAI,sCACLC,MAAK,SAAUC,GACb+E,EAAa/E,EAASI,WAGlC,IAkBH,IAAMiF,EAAkBL,EAASF,EAAUQ,MAzC3C,SAAqBC,EAAGC,GACpB,OAAIA,EAAEC,WAAaF,EAAEE,WAAmB,EACpCF,EAAEE,WAAaD,EAAEC,YAAoB,EAClC,KAsCkD9E,KAAI,SAAC+E,EAAU7E,GAAX,OAC7D,kBAAC,EAAD,CAAgB9C,MAAO2H,EAAS3H,MAAO2B,YAAagG,EAAShG,YACzDa,KAAMmF,EAASnF,KAAM0D,UAAWyB,EAASD,WAAYvB,aAAcwB,EAASC,cACxExB,MAAOuB,EAASvB,MAAOC,UAAWsB,EAASE,WAAYnI,IAAKoD,OAC5DiE,EAAUQ,MAtCtB,SAAqBC,EAAGC,GACpB,OAAIA,EAAErB,MAAQoB,EAAEpB,MAAc,EAC1BoB,EAAEpB,MAAQqB,EAAErB,OAAe,EACxB,KAmC6BxD,KAAI,SAAC+E,EAAU7E,GAAX,OACxC,kBAAC,EAAD,CAAgB9C,MAAO2H,EAAS3H,MAAO2B,YAAagG,EAAShG,YACzDa,KAAMmF,EAASnF,KAAM0D,UAAWyB,EAASD,WAAYvB,aAAcwB,EAASC,cACxExB,MAAOuB,EAASvB,MAAOC,UAAWsB,EAASE,WAAYnI,IAAKoD,OAEpElD,EAAUC,cAOd,OACI,yBAAKI,UAAU,4BAUX,0BAAMA,UAAU,QAAhB,2GACA,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,kBAACsG,EAAD,CAASC,aA7CzB,SAAsBS,GAClB,OAAOA,GACH,IAAK,gEACDC,GAAU,GACV,MACJ,IAAK,kFACDA,GAAU,GACV,MACJ,QACIA,GAAU,OAqCN,kBAAC7F,EAAD,CAAaX,WAAW,mDAAmDU,UAAU,OACjFE,KAAK,oDAAYC,UAAW,kBAAM3B,EAAQO,KAAK,sBAEvD,yBAAKF,UAAU,aACVqH,K,mGCvFN,SAASQ,EAAT,GAAqD,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,YAEjD,OACI,6BACI,kBAACC,EAAA,EAAD,CACAC,KAAMH,EACNI,QAASH,EACTI,kBAAgB,qBAChBC,mBAAiB,4BAEb,kBAACC,EAAA,EAAD,CAAaC,GAAG,qBAAqBvI,UAAU,eAA/C,2IACA,kBAACwI,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAmBF,GAAG,2BAA2BvI,UAAU,cACtD8H,IAGL,kBAACY,EAAA,EAAD,KACA,kBAAClH,EAAA,EAAD,CAAQvB,QAAS+H,EAAalH,MAAM,WAApC,kCAGA,kBAACU,EAAA,EAAD,CAAQvB,QAAS+H,EAAalH,MAAM,UAAU6H,WAAS,GAAvD,qC,wlECtBFC,YAAO,QAAPA,CAAH,MAOUA,YAAO,MAAPA,CAAH,MAgCNA,aAAO,gBAAG5E,EAAH,EAAGA,MAAO6E,EAAV,EAAUA,SAAanI,EAAvB,2CACjB,wBAASA,EACP,8BAAOsD,GACP,kBAAC,IAAD,CAAW/D,QAAS4I,OAHZD,CAAH,MAqCOA,YAAO,KAAPA,CAAH,MAqGb,I,UCtKME,GAAMC,IAAU,KAGhBzI,GAAYC,YAAW,CACzBC,KAAM,CACFC,WAAYqI,GACZnI,OAAQ,EACRC,aAAc,EACdC,UAAW,wCACXC,MAAO,QACPC,OAAQ,GACRC,MAAO,IACPC,QAAS,SACTE,UAAW,MAIb6H,GAAiBzI,YAAW,CAC9BC,KAAM,CACFQ,MAAO,OAKA,SAASiI,KAEpB,IAAM1H,EAAUjB,KACV4I,EAAeF,KAEjBrJ,EAAUC,cALmB,EAMP0C,mBAAS,IANF,mBAM1BvC,EAN0B,KAMnBoJ,EANmB,OAOT7G,mBAAS,IAPA,mBAO1B8G,EAP0B,aASC9G,oBAAS,IATV,mBAS1ByF,EAT0B,KASfsB,EATe,OAWT/G,mBAAS,IAXA,mBAW1BC,EAX0B,KAWpBC,EAXoB,KAqCjC,OACI,yBAAKxC,UAAU,qBACX,6BACI,0BAAMA,UAAU,QAAhB,4GAEJ,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,sBACX,0BAAMA,UAAU,qBAAhB,+UACA,0BAAMA,UAAU,cAAhB,kCACA,2BAAOZ,MAAOW,EAAOuJ,QAAS,SAAAC,GAAC,OAAIJ,EAASI,EAAE9C,OAAOrH,QAAQ2E,KAAK,OAAOyF,YAAY,uNAAkDxJ,UAAU,oBAErJ,yBAAKA,UAAU,qBACX,0BAAMA,UAAU,QAAhB,qDACA,0BAAMA,UAAU,oBAAhB,kPACA,yBAAKA,UAAU,eACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,sBACX,kBAAC,IAAD,CAAiBA,UAAU,sBAAsByJ,KAAMC,MACvD,kBAAC,IAAD,CAAiB1J,UAAU,sBAAsByJ,KAAME,MACvD,kBAAC,IAAD,CAAiB3J,UAAU,sBAAsByJ,KAAMG,MACvD,kBAAC,IAAD,CAAiB5J,UAAU,sBAAsByJ,KAAMI,MACvD,kBAAC,IAAD,CAAiB7J,UAAU,sBAAsByJ,KAAMK,QAG/D,yBAAK9J,UAAU,aACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,iBACX,0BAAMA,UAAU,YAAhB,wCACA,0BAAMA,UAAU,YAAhB,wCACA,0BAAMA,UAAU,YAAhB,wCACA,0BAAMA,UAAU,YAAhB,iDAIZ,yBAAKA,UAAU,cAEX,kBAAC+J,GAAA,EAAD,CACI/J,UAAWkJ,EAAa1I,KACxB+H,GAAG,oBACHvE,MAAM,wBACNgG,WAAS,OAKzB,yBAAKhK,UAAU,qBACX,0BAAMA,UAAU,cAAhB,4BACA,0BAAMA,UAAU,qBAAhB,6OACA,2BAAOZ,MAAOmD,EAAM+G,QAAS,SAAAC,GAAC,OAAI/G,EAAQ+G,EAAE9C,OAAOrH,QAAQoK,YAAY,uDAAmCzF,KAAK,OAAO/D,UAAU,oBAapI,kBAACwB,EAAA,EAAD,CAAQvB,QAjFxB,WACI,IAAIgK,EAAY1H,EAAK2H,MAAM,KAC3BrI,IAAM,CACFqC,OAAQ,OACRtC,IAAK,uCACLQ,KAAM,CACJrC,MAAOA,EACPqJ,KAAMA,EACN7G,KAAM0H,KAGXlI,MAAK,SAAUC,GACQ,QAAjBA,EAASI,MACRiH,GAAa,OAoE0BrJ,UAAWuB,EAAQf,MAAtD,qDACA,kBAAC,EAAD,CAAYsH,KAAM/H,EAAOgI,UAAWA,EAAWC,YAvF/D,WACIqB,GAAa,GACb1J,EAAQO,KAAK,oB,aC9BNiK,OAjBf,WAEE,OACG,kBAAC,KAAD,KACE,yBAAKxD,MAAO,CAAEyD,UAAW,QACtB,kBAAC1K,EAAD,MACA,kBAAC,IAAD,CAAO2K,KAAK,IAAIC,OAAK,EAACC,UAAWlI,IACjC,kBAAC,IAAD,CAAOgI,KAAK,SAASE,UAAWpG,IAChC,kBAAC,IAAD,CAAOkG,KAAK,YAAYE,UAAWtH,IACnC,kBAAC,IAAD,CAAOoH,KAAK,QAAQE,UAAWlI,IAC/B,kBAAC,IAAD,CAAOgI,KAAK,aAAaC,OAAK,EAACC,UAAW1D,IAC1C,kBAAC,IAAD,CAAOwD,KAAK,iBAAiBE,UAAWtB,QCV9BuB,QACW,cAA7BC,OAAOvD,SAASwD,UAEe,UAA7BD,OAAOvD,SAASwD,UAEhBD,OAAOvD,SAASwD,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnJ,MAAK,SAAAoJ,GACJA,EAAaC,gBAEdC,OAAM,SAAA5G,GACLpF,QAAQoF,MAAMA,EAAM6G,c","file":"static/js/main.9be6a2b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Menu, { SubMenu, Item as MenuItem, Divider } from 'rc-menu';\r\nimport 'rc-menu/assets/index.css';\r\nimport { useHistory } from \"react-router-dom\";\r\n  \r\n  function onOpenChange(value) {\r\n    console.log('onOpenChange', value);\r\n  }\r\n\r\n  function handleClick(info) {\r\n    console.log(`clicked ${info.key}`);\r\n    console.log(info);\r\n  }\r\n\r\n  \r\nexport default function CommonMenu() {\r\n    \r\n      let history = useHistory()\r\n\r\n      const children = [\r\n        <MenuItem key=\"1\" disabled>Rapat Overflow</MenuItem>,\r\n        <SubMenu title={<span className=\"submenu-title-wrapper\">אפשרויות</span>} key=\"2\">\r\n          <MenuItem key=\"2-1\" onClick={() => history.push(\"/\")}>תגיות</MenuItem>\r\n          <MenuItem key=\"2-2\" >משתמשים</MenuItem>\r\n          <MenuItem key=\"2-3\" >עבודות מזדמנות</MenuItem>\r\n        </SubMenu>,\r\n        <MenuItem key=\"3\" onClick={() => history.push(\"/login\")}>כניסה</MenuItem>,\r\n        <MenuItem key=\"4\" onClick={() => history.push(\"/register\")}>הרשמה</MenuItem>,\r\n        <MenuItem key=\"5\" onClick={() => history.push(\"/questions\")}>שאלות</MenuItem>,\r\n      ];\r\n\r\n      \r\n      return (\r\n        <div>\r\n          <Menu\r\n            onClick={handleClick}\r\n            onOpenChange={onOpenChange}\r\n            selectedKeys={['0']}\r\n            mode=\"horizontal\"\r\n            openAnimation=\"slide-up\"\r\n          >\r\n            {children}\r\n          </Menu>\r\n        </div>\r\n      );\r\n  }\r\n  ","import React, {useState} from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      background: props => props.background,\r\n      border: 0,\r\n      borderRadius: 3,\r\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n      color: 'white',\r\n      height: 30,\r\n      width: 150,\r\n      padding: '0 30px',\r\n      marginRight: props => props.marginRight,\r\n      marginTop: props => props.marginTop,\r\n    },\r\n  });\r\n\r\n\r\nexport default function RapatButton({name, onClicked, ...props}){\r\n    \r\n    const classes = useStyles(props);\r\n\r\n    return(\r\n        <div>\r\n            <Button onClick={onClicked} className={classes.root}>{name}</Button>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport './TagCard.css';\r\nimport RapatButton from '../Common/RapatButton';\r\n\r\n\r\nexport default function TagCard({name, description, questionsCount}){\r\n\r\n    let history = useHistory()\r\n\r\n    function onClick(){\r\n        var url = `http://167.71.32.57:5000/questions/${name}`;\r\n        axios.get(url)\r\n                .then(function (response) {\r\n                    history.push({\r\n                        pathname: \"/questions\",\r\n                        state: { tagQuestions : response.data }\r\n                    })\r\n                });\r\n    }\r\n\r\n    return(\r\n        <div className=\"card\">\r\n            <RapatButton background='#D2691E' onClicked={onClick} name={name} />\r\n            <p className=\"tag-description\">{description}</p>\r\n            <div className='tag-questions'>\r\n                <span className=\"questions-number\">{'מספר שאלות: ' + questionsCount}</span>\r\n                <span className=\"questions-week-number\">0 שאלות בשבוע האחרון</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport TagCard from './TagCard';\r\nimport './Tags.css';\r\n\r\nexport default function Tags({}){\r\n\r\n    const [tags, setTags] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get('http://167.71.32.57:5000/tags')\r\n                .then(function (response) {\r\n                    setTags(response.data);\r\n                });\r\n    }, []);\r\n\r\n\r\n    const TagCards = tags.map((tag, i) =>\r\n        <TagCard name={tag.tag_name} description={tag.tag_description}\r\n            questionsCount={tag.tag_questions_number} key={i}/>);\r\n\r\n\r\n    return(\r\n        <div className='tags-main'>\r\n            {TagCards}\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\nimport TextField from 'material-ui/TextField';\r\nimport axios from 'axios';\r\nimport './Register.css';\r\n\r\nexport default function Register() {\r\n\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  \r\n  function handleClick(){\r\n\r\n    axios({\r\n        method: 'post',\r\n        url: 'http://167.71.32.57:5000/addUser',\r\n        data: {\r\n          firstName: firstName,\r\n          lastName: lastName,\r\n          email: email,\r\n          password: password\r\n        }\r\n    })\r\n    .then(function (response) {\r\n        if(response.data == 'True'){\r\n          \r\n        }\r\n    });\r\n  }\r\n  const [modal, setIsModalOpen] = useState(true);\r\n  const toggle = () => setIsModalOpen(!modal);\r\n\r\n  return (\r\n      <div className=\"register\">\r\n        <MuiThemeProvider>\r\n          <div>\r\n           <TextField\r\n             hintText=\"הקלד שם פרטי\"\r\n             floatingLabelText=\"שם פרטי\"\r\n             onChange = {(event,newValue) => setFirstName(newValue)}\r\n             />\r\n           <br/>\r\n           <TextField\r\n             hintText=\"הקלד שם משפחה\"\r\n             floatingLabelText=\"שם משפחה\"\r\n             onChange = {(event,newValue) => setLastName(newValue)}\r\n             />\r\n           <br/>\r\n           <TextField\r\n             hintText=\"הקלד אימייל\"\r\n             type=\"email\"\r\n             floatingLabelText=\"אימייל\"\r\n             onChange = {(event,newValue) => setEmail(newValue)}\r\n             />\r\n           <br/>\r\n           <TextField\r\n             type = \"password\"\r\n             hintText=\"הקלד סיסמה\"\r\n             floatingLabelText=\"סיסמה\"\r\n             onChange = {(event,newValue) => setPassword(newValue)}\r\n             />\r\n           <br/>\r\n           <RaisedButton className=\"raised-button\" label=\"הירשם\" primary={true} onClick={handleClick}/>\r\n          </div>\r\n         </MuiThemeProvider>\r\n      </div>\r\n    );\r\n  }","import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport AppBar from 'material-ui/AppBar';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\nimport TextField from 'material-ui/TextField';\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport './Login.css';\r\n\r\nexport default function Login() {\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [modal, setModal] = useState(false);\r\n\r\n  function userLogin(){\r\n      axios({\r\n          method: 'post',\r\n          url: 'http://167.71.32.57:5000/login',\r\n          data: {\r\n              name: userName,\r\n              password: password\r\n          }\r\n      })\r\n      .then(function (response) {\r\n          if(response.data == 'True'){\r\n            toggle();\r\n          }\r\n      });\r\n  }\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <MuiThemeProvider>\r\n        <div>\r\n          <TextField\r\n            label=\"Error\"\r\n            error \r\n            variant=\"outlined\"\r\n            hintText=\"הקלד שם משתמש\"\r\n            floatingLabelText=\"שם משתמש\"\r\n            onChange = {(event,newValue) => setUserName(newValue)}\r\n            />\r\n          <br/>\r\n            <TextField\r\n              type=\"password\"\r\n              hintText=\"הקלד סיסמה\"\r\n              floatingLabelText=\"סיסמה\"\r\n              onChange = {(event,newValue) => setPassword(newValue)}\r\n              />\r\n            <br/>\r\n            <RaisedButton className=\"raised-btn\" label=\"כניסה\" primary={true} onClick={userLogin}/>\r\n        </div>\r\n        </MuiThemeProvider>\r\n        <div className=\"modal\">\r\n          <Modal isOpen={modal} toggle={toggle}>\r\n              <ModalHeader toggle={toggle}>הערת אגב</ModalHeader>\r\n              <ModalBody>\r\n                נכנסת לאתר בהצלחה!\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"primary\" onClick={toggle}>Do Something</Button>{' '}\r\n                <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n              </ModalFooter>\r\n          </Modal>\r\n        </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport logo from '../logo.svg';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function UserCard({name}) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  \r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            א\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={name}\r\n        subheader=\"ענף הנדסת מערכת\"\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={logo}\r\n        title=\"Paella dish\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          אורי התגייס ברביעי לשני 2018\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>Method:</Typography>\r\n          <Typography paragraph>\r\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10\r\n            minutes.\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet over medium-high\r\n            heat. Add chicken, shrimp and chorizo, and cook, stirring occasionally until lightly\r\n            browned, 6 to 8 minutes. Transfer shrimp to a large plate and set aside, leaving chicken\r\n            and chorizo in the pan. Add pimentón, bay leaves, garlic, tomatoes, onion, salt and\r\n            pepper, and cook, stirring often until thickened and fragrant, about 10 minutes. Add\r\n            saffron broth and remaining 4 1/2 cups chicken broth; bring to a boil.\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Add rice and stir very gently to distribute. Top with artichokes and peppers, and cook\r\n            without stirring, until most of the liquid is absorbed, 15 to 18 minutes. Reduce heat to\r\n            medium-low, add reserved shrimp and mussels, tucking them down into the rice, and cook\r\n            again without stirring, until mussels have opened and rice is just tender, 5 to 7\r\n            minutes more. (Discard any mussels that don’t open.)\r\n          </Typography>\r\n          <Typography>\r\n            Set aside off of the heat to let rest for 10 minutes, and then serve.\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}","import React, {useState} from 'react';\r\nimport './QuestionReview.css';\r\n\r\nexport default function QuestionReview({title, description, tags, viewCount, answersCount, score, ownerName}){\r\n\r\n    \r\n    const tagSpans = tags.map((tag, i) =>\r\n        <span className=\"tag\">{tag}</span>);\r\n\r\n\r\n    return(\r\n        <div className=\"question-summary\">\r\n            <div className=\"stats-container\">\r\n                <div className=\"stats\">\r\n                    <div className=\"vote\">\r\n                        <span className=\"votes-num\">{score}</span>\r\n                        <span>הצבעות</span>\r\n                    </div>\r\n                    <div className=\"answered\">\r\n                        <span className=\"answered-num\">{answersCount}</span>\r\n                        <span>תשובות</span>\r\n                    </div>\r\n                    <div className=\"views\">\r\n                        <span>{\"מספר צפיות: \" + viewCount}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"summary\">\r\n                <span className='question-title'>{title}</span>\r\n                <span className='question-brief'>{description + description + description}</span>\r\n                <div className=\"question-tags\">\r\n                    {tagSpans}\r\n                </div>\r\n                <div className=\"user-action\">\r\n                    <span className=\"user-action-time\">נשאל לפני חודשיים</span>\r\n                    <span className=\"user-ask\">{\"על ידי: \" + ownerName}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport RapatButton from '../Common/RapatButton';\r\n\r\nexport default function Filters({sortByFilter}){\r\n    \r\n    function onFilterClicked(event){\r\n        {sortByFilter(event.target.innerText)};\r\n    }\r\n\r\n    return(\r\n        <div style={{ display: 'flex' }}>\r\n            <RapatButton background='#D2691E' onClicked={onFilterClicked} name='הנצפה ביותר' />\r\n            <RapatButton background='#D2691E' marginRight='5px' onClicked={onFilterClicked} name='הפופולרי ביותר' />\r\n            <RapatButton background='#D2691E' marginRight='5px' onClicked={onFilterClicked} name='החדש ביותר' />\r\n        </div>\r\n    );\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport QuestionReview from './QuestionReview';\r\nimport Filters from './Filters';\r\nimport './QuestionList.css';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport RapatButton from '../Common/RapatButton';\r\n\r\n\r\nexport default function QuestionList(){\r\n\r\n    const [questions, setQuestions] = useState([]);\r\n    const [filter, setFilter] = useState(true);\r\n    \r\n    \r\n    let location = useLocation();\r\n    \r\n    \r\n    function sortByViews(a, b){\r\n        if (b.view_count > a.view_count) return 1;\r\n        if (a.view_count > b.view_count) return -1;\r\n        return 0;\r\n    }\r\n\r\n\r\n    function sortByScore(a, b){\r\n        if (b.score > a.score) return 1;\r\n        if (a.score > b.score) return -1;\r\n        return 0;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(location.state !== undefined){\r\n            setQuestions(location.state.tagQuestions);\r\n        }\r\n        else{\r\n            axios.get('http://167.71.32.57:5000/questions')\r\n                .then(function (response) {\r\n                   setQuestions(response.data)\r\n                });\r\n        }\r\n    }, []);\r\n\r\n\r\n    function sortByFilter(filter) {\r\n        switch(filter) {\r\n            case 'הנצפה ביותר':\r\n                setFilter(true);\r\n                break;\r\n            case 'הפופולרי ביותר':\r\n                setFilter(false);\r\n                break;\r\n            default:\r\n                setFilter(true);\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    const QuestionsReview = filter ? questions.sort(sortByViews).map((question, i) =>\r\n        <QuestionReview title={question.title} description={question.description}\r\n            tags={question.tags} viewCount={question.view_count} answersCount={question.answers_count}\r\n                score={question.score} ownerName={question.owner_name} key={i}/>) :\r\n                questions.sort(sortByScore).map((question, i) =>\r\n        <QuestionReview title={question.title} description={question.description}\r\n            tags={question.tags} viewCount={question.view_count} answersCount={question.answers_count}\r\n                score={question.score} ownerName={question.owner_name} key={i}/>);\r\n\r\n    let history = useHistory();\r\n\r\n    const top100Films = [\r\n        { title: 'The Shawshank Redemption', year: 1994 },\r\n        { title: 'The Godfather', year: 1972 },\r\n        { title: 'The Godfather: Part II', year: 1974 }];\r\n\r\n    return(\r\n        <div className='questions-list-container'>\r\n            {/* <Autocomplete\r\n                id=\"free-solo-demo\"\r\n                freeSolo\r\n                onChange={(event, values) => console.log(values) }\r\n                options={top100Films.map(option => option.title)}\r\n                renderInput={params => (\r\n                <TextField {...params} label=\"freeSolo\" margin=\"normal\" variant=\"outlined\" />\r\n                )}\r\n            /> */}\r\n            <span className='note'>דע לך : אין הביישן למד!</span>\r\n            <div className='questions-list-main'>\r\n                <div className=\"questions-filter\">\r\n                    <Filters sortByFilter={sortByFilter}/> \r\n                    <RapatButton background='linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)' marginTop='30px'\r\n                        name='הוסף שאלה' onClicked={() => history.push(\"/questions/add\")}/>\r\n                </div>\r\n                <div className=\"questions\">\r\n                    {QuestionsReview}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport './RapatModal.css';\r\n\r\n\r\nexport default function RapatModal({text, modalOpen, handleClose}) {\r\n    \r\n    return (\r\n        <div>\r\n            <Dialog\r\n            open={modalOpen}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" className='modal-title'>העלאת השאלה הושלמה בהצלחה</DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\" className='modal-text'>\r\n                    {text}\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    ביטול\r\n                </Button>\r\n                <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                    אישור\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Label = styled('label')`\r\n  padding: 0 0 4px;\r\n  line-height: 1.5;\r\n  display: block;\r\n`;\r\n\r\n\r\nconst InputWrapper = styled('div')`\r\n  width: 700px;\r\n  border: 1px solid #d9d9d9;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  padding: 1px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  &:hover {\r\n    border-color: #40a9ff;\r\n  }\r\n\r\n  &.focused {\r\n    border-color: #40a9ff;\r\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\r\n  }\r\n\r\n  & input {\r\n    font-size: 14px;\r\n    height: 30px;\r\n    box-sizing: border-box;\r\n    padding: 4px 6px;\r\n    width: 0;\r\n    min-width: 30px;\r\n    flex-grow: 1;\r\n    border: 0;\r\n    margin: 0;\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nconst Tag = styled(({ label, onDelete, ...props }) => (\r\n  <div {...props}>\r\n    <span>{label}</span>\r\n    <CloseIcon onClick={onDelete} />\r\n  </div>\r\n))`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 24px;\r\n  margin: 2px;\r\n  line-height: 22px;\r\n  background-color: #fafafa;\r\n  border: 1px solid #e8e8e8;\r\n  border-radius: 2px;\r\n  box-sizing: content-box;\r\n  padding: 0 4px 0 10px;\r\n  outline: 0;\r\n  overflow: hidden;\r\n\r\n  &:focus {\r\n    border-color: #40a9ff;\r\n    background-color: #e6f7ff;\r\n  }\r\n\r\n  & span {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n  }\r\n\r\n  & svg {\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n    padding: 4px;\r\n  }\r\n`;\r\n\r\nconst Listbox = styled('ul')`\r\n  width: 300px;\r\n  margin: 2px 0 0;\r\n  padding: 0;\r\n  position: absolute;\r\n  list-style: none;\r\n  background-color: #fff;\r\n  overflow: auto;\r\n  max-height: 250px;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\r\n  z-index: 1;\r\n\r\n  & li {\r\n    padding: 5px 12px;\r\n    display: flex;\r\n\r\n    & span {\r\n      flex-grow: 1;\r\n    }\r\n\r\n    & svg {\r\n      color: transparent;\r\n    }\r\n  }\r\n\r\n  & li[aria-selected='true'] {\r\n    background-color: #fafafa;\r\n    font-weight: 600;\r\n\r\n    & svg {\r\n      color: #1890ff;\r\n    }\r\n  }\r\n\r\n  & li[data-focus='true'] {\r\n    background-color: #e6f7ff;\r\n    cursor: pointer;\r\n\r\n    & svg {\r\n      color: #000;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function CustomizedHook({optionalTags}) {\r\n\r\n  useEffect(() => {\r\n    setTags(value);\r\n    var a = 10;\r\n  });\r\n\r\n    const {\r\n        getRootProps,\r\n        getInputLabelProps,\r\n        getInputProps,\r\n        getTagProps,\r\n        getListboxProps,\r\n        getOptionProps,\r\n        groupedOptions,\r\n        value,\r\n        focused,\r\n        setAnchorEl,\r\n    } = useAutocomplete({\r\n        id: 'customized-hook-demo',\r\n        multiple: true,\r\n        options: top100Films,\r\n        getOptionLabel: option => option.title,\r\n    });\r\n\r\n    const [tags, setTags] = useState([]);\r\n\r\n\r\n  return (\r\n    <NoSsr>\r\n      <div>\r\n        <div {...getRootProps()}>\r\n          <Label {...getInputLabelProps()}></Label>\r\n          <InputWrapper ref={setAnchorEl} className={focused ? 'focused' : ''}>\r\n            {value.map((option, index) => (\r\n              <Tag label={option.title} {...getTagProps({ index })} />\r\n            ))}\r\n\r\n            <input {...getInputProps()} />\r\n          </InputWrapper>\r\n        </div>\r\n        {groupedOptions.length > 0 ? (\r\n          <Listbox {...getListboxProps()}>\r\n            {groupedOptions.map((option, index) => (\r\n              <li {...getOptionProps({ option, index })}>\r\n                <span>{option.title}</span>\r\n                <CheckIcon fontSize=\"small\" />\r\n              </li>\r\n            ))}\r\n          </Listbox>\r\n        ) : null}\r\n      </div>\r\n    </NoSsr>\r\n  );\r\n}\r\n\r\nconst rapatTags = [\r\n    'javascript',\r\n    'reactjs',\r\n    'python',\r\n    'C#',\r\n    'C++',\r\n    'PowerShell',\r\n    'ipv4'\r\n]\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  { title: 'reactjs', year: 1994 },\r\n  { title: 'javascript', year: 1972 },\r\n  { title: 'python', year: 1974 },\r\n  { title: 'python3', year: 2008 },\r\n  { title: 'C#', year: 1957 },\r\n  { title: \"C++\", year: 1993 },\r\n  { title: 'ipv4', year: 1994 },\r\n  { title: 'ipv6', year: 2003 },\r\n];","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faListOl } from '@fortawesome/free-solid-svg-icons';\r\nimport { faRedoAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faUndoAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faQuoteRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { faLink } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles, rgbToHex } from '@material-ui/core/styles';\r\nimport lightBlue from '@material-ui/core/colors/lightBlue';\r\nimport './AddQuestion.css';\r\nimport RapatModal from '../Common/RapatModal';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CustomizedHook from './AddTags';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Input from '@material-ui/core/Input';\r\n\r\n\r\nconst lbc = lightBlue[500]\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: lbc,\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        color: 'white',\r\n        height: 30,\r\n        width: 150,\r\n        padding: '0 30px',\r\n        marginTop: 20,\r\n    },\r\n  });\r\n\r\nconst inputUseStyles = makeStyles({\r\n    root: {\r\n        width: 696,\r\n    },\r\n  });\r\n\r\n\r\nexport default function AddQuestion(){\r\n    \r\n    const classes = useStyles();\r\n    const inputClasses = inputUseStyles();\r\n\r\n    let history = useHistory();\r\n    const [title, setTitle] = useState(\"\");\r\n    const [body, setBody] = useState(\"\");\r\n    //const [tags, setTags] = useState(\"\");\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n\r\n    const [tags, setTags] = useState([]);\r\n\r\n    function handleModalOK(){\r\n        setModalOpen(false);\r\n        history.push(\"/questions\");\r\n    }\r\n\r\n    function onUploadQuestion(){\r\n        var tagsArray = tags.split(',');\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://167.71.32.57:5000/addQuestion',\r\n            data: {\r\n              title: title,\r\n              body: body,\r\n              tags: tagsArray\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            if(response.data == 'True'){\r\n                setModalOpen(true);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    return(\r\n        <div className='add-question-main'>\r\n            <div>\r\n                <span className='note'>דע לך : אין הביישן למד!</span>\r\n            </div>\r\n            <div className='add-question-body-main'>\r\n                <div className='add-question-container'>\r\n                    <div className='add-question-title'>\r\n                        <span className='title-description'>ציין במדויק ובאופן ממוקד מהי שאלתך - דמיין שאתה שואל שאלה לאדם אחר</span>\r\n                        <span className='title-text'>כותרת</span>\r\n                        <input value={title} onInput={e => setTitle(e.target.value)} type=\"text\" placeholder='למשל, כיצד ניתן לחולל קבצי h באמצעות מחולל IRS?' className='title-inputbox'></input>\r\n                    </div>\r\n                    <div className='add-question-body'>\r\n                        <span className='body'>גוף השאלה</span>\r\n                        <span className='body-description'>רשום את כל המידע שעשוי לשמש אדם אחר על מנת לענות</span>\r\n                        <div className='body-border'>\r\n                            <div className='wmd-button-bar'>\r\n                                <div className='wmd-button-bar-row'>\r\n                                    <FontAwesomeIcon className='wmd-button-bar-icon' icon={faRedoAlt} />\r\n                                    <FontAwesomeIcon className='wmd-button-bar-icon' icon={faUndoAlt} />\r\n                                    <FontAwesomeIcon className='wmd-button-bar-icon' icon={faQuoteRight} />\r\n                                    <FontAwesomeIcon className='wmd-button-bar-icon' icon={faLink} />\r\n                                    <FontAwesomeIcon className='wmd-button-bar-icon' icon={faListOl} />\r\n                                </div>\r\n                            </div>\r\n                            <div className='help-tabs'>\r\n                                <div className='help-tabs-bar'>\r\n                                    <div className='help-tabs-row'>\r\n                                        <span className='help-tab'>לינקים</span>\r\n                                        <span className='help-tab'>תמונות</span>\r\n                                        <span className='help-tab'>רשימות</span>\r\n                                        <span className='help-tab'>ציטוטים</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='body-input'>\r\n                                {/* <input value={body} onInput={e => setBody(e.target.value)} className='body-input-text'></input> */}\r\n                                <Input\r\n                                    className={inputClasses.root}\r\n                                    id=\"standard-textarea\"\r\n                                    label=\"Multiline Placeholder\"\r\n                                    multiline\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='add-question-tags'>\r\n                        <span className='title-text'>תגים</span>\r\n                        <span className='title-description'>הוסף 5 תגים לכל היותר על מנת לתאר את נושאי השאלה</span>\r\n                        <input value={tags} onInput={e => setTags(e.target.value)} placeholder='למשל javascript, python, reactjs' type=\"text\" className='title-inputbox' />\r\n                        {/* <CustomizedHook optionalTags={[\r\n                                                        { title: 'reactjs', year: 1994 },\r\n                                                        { title: 'javascript', year: 1972 },\r\n                                                        { title: 'python', year: 1974 },\r\n                                                        { title: 'python3', year: 2008 },\r\n                                                        { title: 'C#', year: 1957 },\r\n                                                        { title: \"C++\", year: 1993 },\r\n                                                        { title: 'ipv4', year: 1994 },\r\n                                                        { title: '.Net core', year: 1994 },\r\n                                                        { title: 'ipv6', year: 2003 },\r\n                                                        ]}/> */}\r\n                    </div>\r\n                    <Button onClick={onUploadQuestion} className={classes.root}>העלה שאלה</Button>\r\n                    <RapatModal text={title} modalOpen={modalOpen} handleClose={handleModalOK} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport CommonMenu from './Menu/CommonMenu.js';\r\nimport Tags from './Tags/Tags';\r\nimport Register from './Register/Register';\r\nimport Login from './Login/Login';\r\nimport Users from './Users/Users';\r\nimport QuestionList from './Questions/QuestionList';\r\nimport AddQuestion from './Questions/AddQuestion';\r\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n     <Router>\r\n       <div style={{ direction: 'rtl' }}>\r\n          <CommonMenu />\r\n          <Route path=\"/\" exact component={Tags}/>\r\n          <Route path=\"/login\" component={Login}/>\r\n          <Route path=\"/register\" component={Register}/>\r\n          <Route path=\"/tags\" component={Tags}/>\r\n          <Route path=\"/questions\" exact component={QuestionList}/>\r\n          <Route path=\"/questions/add\" component={AddQuestion}/>\r\n       </div>\r\n     </Router>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}